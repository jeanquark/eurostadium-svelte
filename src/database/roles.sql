-----------------------
--       Roles       --
-----------------------
-- Custom types
DROP type IF EXISTS public.app_permission CASCADE;
DROP type IF EXISTS public.app_role CASCADE;
DROP table IF EXISTS public.user_roles CASCADE;
DROP table IF EXISTS public.role_permissions CASCADE;

create type public.app_permission as enum ('images.post', 'images.update', 'images.validate', 'images.delete', 'users.update', 'users.delete');
create type public.app_role as enum ('user', 'moderator', 'admin');

-- USER ROLES
create table public.user_roles (
  id        bigint generated by default as identity primary key,
  user_id   uuid references auth.users on delete cascade not null,
  role      app_role not null,
  unique (user_id, role)
);
comment on table public.user_roles is 'Application roles for each user.';

-- ROLE PERMISSIONS
create table public.role_permissions (
  id           bigint generated by default as identity primary key,
  role         app_role not null,
  permission   app_permission not null,
  unique (role, permission)
);
comment on table public.role_permissions is 'Application permissions for each role.';

-- INSERT PERMISSIONS
insert into public.role_permissions (role, permission)
values
  ('admin', 'images.post'),
  ('admin', 'images.update'),
  ('admin', 'images.validate'),
  ('admin', 'images.delete'),
  ('admin', 'users.update'),
  ('admin', 'users.delete'),
  ('moderator', 'images.post'),
  ('moderator', 'images.validate'),
  ('moderator', 'images.delete'),
  ('user', 'images.post');